stages:
  - build
  - deploy
  - cleanup

variables:
  CI_PROJECT_NAME: youdescribex-api
  DOCKER_REGISTRY: youdescribe
  CI_REGISTRY: docker.io
  IMAGE_NAME: "${DOCKER_REGISTRY}/${CI_PROJECT_NAME}"
  LATEST_IMAGE: "${IMAGE_NAME}:latest"
  VERSIONED_IMAGE: "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}"

services:
  - docker:24.0.5-dind

before_script:
  - echo "Logging into Docker..."
  - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USER" --password-stdin $CI_REGISTRY

build:
  stage: build
  script:
    - echo "Building Docker image..."
    - docker build --no-cache
      --build-arg GOOGLE_CRED_FILE="$GOOGLE_CRED_FILE"
      --build-arg GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_APPLICATION_CREDENTIALS"
      --build-arg NODE_ENV="$NODE_ENV"
      --build-arg YOUTUBE_API_URL="$YOUTUBE_API_URL"
      --build-arg YOUTUBE_API_KEY="$YOUTUBE_API_KEY"
      --build-arg CURRENT_DATABASE="$CURRENT_DATABASE"
      --build-arg POSTGRES_DB_NAME="$POSTGRES_DB_NAME"
      --build-arg POSTGRES_DB_USER="$POSTGRES_DB_USER"
      --build-arg POSTGRES_DB_PASSWORD="$POSTGRES_DB_PASSWORD"
      --build-arg POSTGRES_DB_PORT="$POSTGRES_DB_PORT"
      --build-arg POSTGRES_DB_HOST="$POSTGRES_DB_HOST"
      --build-arg MONGO_DB_DATABASE="$MONGO_DB_DATABASE"
      --build-arg MONGO_DB_HOST="$MONGO_DB_HOST"
      --build-arg MONGO_DB_PORT="$MONGO_DB_PORT"
      --build-arg MONGO_DB_USER="$MONGO_DB_USER"
      --build-arg MONGO_DB_PASSWORD="$MONGO_DB_PASSWORD"
      -t $VERSIONED_IMAGE -t $LATEST_IMAGE .
    - docker push $VERSIONED_IMAGE
    - docker push $LATEST_IMAGE
    - echo "Build complete"
  tags:
    - backend
  only:
    - dev
    - main

.deploy_template: &deploy_template
  stage: deploy
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME environment..."
    - docker-compose -f docker-compose.yml pull
    - docker-compose -f docker-compose.yml down
    - docker-compose -f docker-compose.yml up -d --remove-orphans

deploy_dev:
  <<: *deploy_template
  environment:
    name: dev
  variables:
    PASSPORT_REDIRECT_URL: $PASSPORT_REDIRECT_URL_DEV
    PASSPORT_CALLBACK_URL: $PASSPORT_CALLBACK_URL_DEV
    CURRENT_YDX_HOST: $YDX_HOST_DEV
  tags:
    - backend
    - dev
  only:
    - dev

deploy_prod:
  <<: *deploy_template
  environment:
    name: prod
  variables:
    PASSPORT_REDIRECT_URL: $PASSPORT_REDIRECT_URL_PROD
    PASSPORT_CALLBACK_URL: $PASSPORT_CALLBACK_URL_PROD
    CURRENT_YDX_HOST: $YDX_HOST_PROD
  tags:
    - backend
    - prod
  only:
    - main

cleanup:
  stage: cleanup
  script:
    - echo "Cleaning up old images..."
    - docker image prune -af --filter "until=24h"
    - docker container prune -f
  tags:
    - backend
  only:
    - dev
    - main