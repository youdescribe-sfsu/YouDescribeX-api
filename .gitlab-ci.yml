image:
  name: node:18-alpine

variables:
  CI_PROJECT_NAME: youdescribe-api

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build-stage:
  stage: build
  tags:
    - backend
    - staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
  script:
    - echo "Building YouDescribe Backend in staging"
    - docker build --build-arg APP_PORT=$PORT -t "${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}-1.${CI_PIPELINE_ID}" .
    - echo "Build complete"

build-prod:
  stage: build
  tags:
    - backend
    - prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
  script:
    - echo "Building YouDescribe Backend in prod"
    - docker build --build-arg APP_PORT=$PORT -t "${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}-1.${CI_PIPELINE_ID}" .
    - echo "Build completed"

deploy-stage:
  stage: deploy
  tags:
    - backend
    - staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
  script:
    - echo "Stopping old YouDescribe Backend instance"
    - echo "Stopping old $YOUR_VARIABLE_NAME Backend instance"
    - echo "PORT: $PORT"
    - echo "NODE_ENV: $NODE_ENV"
    - echo "HOST: $HOST"
    - echo "LOG_DIR: $LOG_DIR"
    - echo "AUDIO_DIRECTORY: $AUDIO_DIRECTORY"
    - docker stop ${CI_PROJECT_NAME} || true
    - echo "Deleting old YouDescribe Backend container"
    - docker rm ${CI_PROJECT_NAME} || true
    - echo "Starting up/Deploying newest YouDescribe Backend build"
    - docker run
        -e GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
        -e PORT=$PORT
        -e NODE_ENV=$NODE_ENV
        -e HOST=$HOST
        -e LOG_DIR=$LOG_DIR
        -e AUDIO_DIRECTORY=$AUDIO_DIRECTORY
        -e YOUTUBE_API_URL=$YOUTUBE_API_URL
        -e YOUTUBE_API_KEY=$YOUTUBE_API_KEY
        -e PASSPORT_REDIRECT_URL=$PASSPORT_REDIRECT_URL
        -e PASSPORT_CALLBACK_URL=$PASSPORT_CALLBACK_URL
        -e CRYPTO_SECRET=$CRYPTO_SECRET
        -e CRYPTO_SEED=$CRYPTO_SEED
        -e CURRENT_DATABASE=$CURRENT_DATABASE
        -e POSTGRES_DB_NAME=$POSTGRES_DB_NAME
        -e POSTGRES_DB_USER=$POSTGRES_DB_USER
        -e POSTGRES_DB_PASSWORD=$POSTGRES_DB_PASSWORD
        -e POSTGRES_DB_PORT=$POSTGRES_DB_PORT
        -e POSTGRES_DB_HOST=$POSTGRES_DB_HOST
        -e MONGO_DB_DATABASE=$MONGO_DB_DATABASE
        -e MONGO_DB_HOST=$MONGO_DB_HOST
        -e MONGO_DB_PORT=$MONGO_DB_PORT
        -e MONGO_DB_USER=$MONGO_DB_USER
        -e MONGO_DB_PASSWORD=$MONGO_DB_PASSWORD
        -v ./public:/app/public
        -v ./logs:/app/logs
        --name ${CI_PROJECT_NAME}
        --restart unless-stopped -d -p 0.0.0.0:$PORT:$PORT ${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}-1.${CI_PIPELINE_ID}
    - echo "Finished deploying YouDescribe Backend build to staging"

deploy-prod:
  stage: deploy
  tags:
    - backend
    - prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  script:
    - echo "Stopping old YouDescribe Backend instance"
    - docker stop ${CI_PROJECT_NAME} || true
